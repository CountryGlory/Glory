<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rong.friend.dao.RelatedtomeMapper" >
  <resultMap id="BaseResultMap" type="com.rong.friend.model.Relatedtome" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="commentId" property="commentid" jdbcType="VARCHAR" />
    <result column="messageId" property="messageid" jdbcType="VARCHAR" />
    <result column="fabulousId" property="fabulousid" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createdt" property="createdt" jdbcType="TIMESTAMP" />
    <result column="read" property="read" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, commentId, messageId, fabulousId, content, createdt, read, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from relatedtome
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from relatedtome
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.rong.friend.model.Relatedtome" >
    insert into relatedtome (id, userId, commentId, 
      messageId, fabulousId, content, 
      createdt, read, status)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{commentid,jdbcType=VARCHAR}, 
      #{messageid,jdbcType=VARCHAR}, #{fabulousid,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createdt,jdbcType=TIMESTAMP}, #{read}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rong.friend.model.Relatedtome" >
    insert into relatedtome
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="commentid != null" >
        commentId,
      </if>
      <if test="messageid != null" >
        messageId,
      </if>
      <if test="fabulousid != null" >
        fabulousId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createdt != null" >
        createdt,
      </if>
      <if test="read != null">
      	read,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        #{commentid,jdbcType=VARCHAR},
      </if>
      <if test="messageid != null" >
        #{messageid,jdbcType=VARCHAR},
      </if>
      <if test="fabulousid != null" >
        #{fabulousid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdt != null" >
        #{createdt,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
      	#{read}
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rong.friend.model.Relatedtome" >
    update relatedtome
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        commentId = #{commentid,jdbcType=VARCHAR},
      </if>
      <if test="messageid != null" >
        messageId = #{messageid,jdbcType=VARCHAR},
      </if>
      <if test="fabulousid != null" >
        fabulousId = #{fabulousid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdt != null" >
        createdt = #{createdt,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
      	#{read}
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rong.friend.model.Relatedtome" >
    update relatedtome
    set userId = #{userid,jdbcType=VARCHAR},
      commentId = #{commentid,jdbcType=VARCHAR},
      messageId = #{messageid,jdbcType=VARCHAR},
      fabulousId = #{fabulousid,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createdt = #{createdt,jdbcType=TIMESTAMP},
      read = #{read},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>